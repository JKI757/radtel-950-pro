old function name,guessed function name & purpose,notes on parameter values/types and internal variables
FUN_80000630,BadInstruction_Handler,"Purpose: A trap or handler for when the CPU encounters an unknown/bad instruction. This is likely a default interrupt vector."
FUN_800008d4,Util_IntegerToString,"Purpose: Converts an unsigned integer into a null-terminated ASCII string. This is a common 'itoa' implementation.","param_1: Pointer to a buffer/struct. The resulting string is stored at offset +0x24 from this pointer. param_3: The unsigned integer to convert."
FUN_80000bc0,lib_memset,"Purpose: Standard library function to fill a block of memory with a specific byte value. It's optimized for word/half-word writes.","param_1: (void*) destination pointer. param_2: (uint) number of bytes to fill. param_3: (byte) value to fill with."
FUN_80000f94,lib_bzero,"Purpose: Standard library function to fill a block of memory with zeros. It's an optimized 'memset(..., 0, ...)' or 'bzero'.","param_1: (void*) destination pointer. param_2: (uint) number of bytes to write."
FUN_80001026,lib_strncpy,"Purpose: Standard library function to copy a string with a maximum length, padding with nulls if src is shorter than len.","param_1: (char*) destination. param_2: (char*) source. param_3: (int) max length. Calls lib_bzero (FUN_80000f94) to pad."
FUN_80003c08,I2C_Write_Command_Word,"Purpose: Sends a 6-byte command packet over a serial bus (likely I2C or SPI) and then delays.","param_1: (uint16_t) A 16-bit value split into two bytes in the packet. Notes: Calls FUN_8000b7a6 (a delay function) for 50ms (0x32)."
FUN_80007f04,Peripheral_Init_Register_Block,"Purpose: Initializes a complex external peripheral (like a radio or codec) by writing a long sequence of register/value pairs.","Notes: Calls a function pointer at DAT_80008180+8, likely a 'write_reg(offset, value)' function."
FUN_800081b8,Flash_ReadWrite_Block,"Purpose: Reads or writes a 128-byte (0x80) block from/to specific addresses in the main Flash or an external SPI Flash.","param_1: (int) 0 = Read, 1 = Write. Notes: Accesses addresses like 0x8000, 0x9000, 0xb000, 0xf000."
FUN_800087f4,Util_Calculate_XOR_Checksum,"Purpose: Calculates a simple 8-bit XOR checksum over a block of data.","param_1: (uint) length. param_2: (byte*) data buffer."
FUN_800088f0,RF_Apply_Frequency_Offset,"Purpose: Applies a frequency offset to a base frequency. Used for RF channel selection.","Notes: Selects a channel struct based on index at DAT_80008930+0xf4. Reads base freq from offset +0x108, offset from +0x134, and writes result to +0x114."
FUN_80009110,Channel_Load_Config,"Purpose: Loads and parses configuration data for a specific channel (0, 1, or 2) from Flash into its runtime struct.","param_1: (int) channel index [0-2]. param_2: (int) 1 = read from flash. param_3: (int) flash offset. Notes: Populates the struct at DAT_80009428 + (param_1 * 0x58)."
FUN_8000956c,SPI_Read_And_CRC16,"Purpose: Reads a block of data from an SPI peripheral and calculates a CRC-16 checksum on the fly.","param_1: (uint) number of bytes to read. Notes: Uses CRC-16-CCITT-FALSE (poly 0x1021). `FUN_8002112c` is the byte read function."
FUN_8000ac7c,GPS_Parse_NMEA_Coordinate,"Purpose: Parses an NMEA coordinate string (like $GPRMC) into a data structure.","param_1: (char*) NMEA string. param_2: (struct*) struct to fill. Notes: Identifies N/S (0x4E/0x53) and E/W (0x45/0x57) and converts DDMM.MMMM format."
FUN_8000b024,Modem_Scramble_Data,"Purpose: Scrambles/whitens a 7-byte block of data, likely for GMSK/FSK modulation.","param_1: (byte*) input buffer. param_2: (byte*) output buffer. Notes: Uses a complex bit-shifting and XOR feedback algorithm."
FUN_8000b62c,RF_Set_Frequency_Synthesizer,"Purpose: Sets the frequency of the RF synthesizer by writing to a peripheral's registers.","param_1: (uint) Frequency value. param_2: (int) Mode. param_3: (int) Flag. Notes: Writes to registers 0x51, 0x07, 0x08 of an external peripheral."
FUN_8000b7a6,Util_Delay_ms,"Purpose: A blocking delay function, likely in milliseconds.","param_1: (uint) Number of milliseconds to delay. Notes: Calls a nested spin-wait loop (FUN_8000b7c2)."
FUN_80013618,Keypad_ScanMatrix,"Periodically drives PC0-PC3 high and samples PD4-PD7 to decode the 5x4 keypad; gated by PE5 and PA12.","Uses DAT_800136d8 (GPIOC) for columns, DAT_800136dc (GPIOD) for rows, DAT_800136d0 (PE5) and DAT_800136d4 (PA12) to enable scanning."
FUN_8000e2e0,Encoder_HandleQuadrature,"State machine for the front-panel rotary encoder on PB4/PB5; debounces movement and queues UI actions.","Reads FUN_80012c26(DAT_8000e428,0x10/0x20) and calls FUN_8000e42c() to clear the latch."
FUN_80013c98,ADC_Read_PA1,"Single conversion on ADC2 channel 1 (PA1) returning an 8-bit scaled value used for audio level logic.","Calls FUN_80003108(DAT_80013cd0,1,1,7) then waits on FUN_800030a4 before reading FUN_8000309e."
FUN_80013cd4,ADC_Read_PA0,"Single conversion on ADC2 channel 0 (PA0) for battery/AGC sensing.","Same ADC2 sequence as FUN_80013c98 but with channel parameter 0."
FUN_8000b368,DAC_Channel_Enable,"Sets or clears channel enable bits in the DAC control register at 0x40007400.","Used together with FUN_8000b388/FUN_8000b3a8 when streaming audio samples to the speaker chain."
FUN_8001ab04,PTT_Relay_Select,"Controls the TX/RX relay matrix: PE13/PE12/PE14/PE7 select PTT path while PB0/PB1 drive accessory enables.","Parameter 1 chooses routing profile; toggles GPIOE via FUN_80012c3a/FUN_80012c3e and clears PB0/PB1 when idle."
FUN_800037b0,Display_BufferFlush,"Streams the prepared frame buffer to the LCD over the external bus while holding PC12 as chip select.","Asserts GPIOC12, primes DMA (DAT_8000396c), waits for completion, then releases the line."
FUN_8001c04c,Band_Relay_ShiftIn,"Bit-banged serial readback of the RF relay latch using PE15/PE10/PE11.","Clears PE15 (0x8000) before clocking, pulses PE10 (0x400) and samples PE11 (0x800) via FUN_80012c26."
FUN_800271c0,LCD_WriteCommand,"Drives the 8080 bus control lines to emit a single command byte to the TFT panel.","param_1: (uint8_t) command value; manipulates GPIOD WR#/CS# via FUN_80012c3a/3e before sending."
FUN_80027220,LCD_WriteData,"Writes one data byte to the TFT panel on the 8080 bus.","param_1: (uint8_t) data value; uses same GPIOD handshake as LCD_WriteCommand but sets D/C high."
FUN_8001cb52,LCD_SetWindow,"Issues column (0x2A) and row (0x2B) address commands to define the drawing window.","param_1/param_2: column start/end; param_3/param_4: row start/end; calls LCD_WriteCommand/Data for each."
FUN_800156dc,LCD_BlitRectangle,"Streams a rectangle of pixel data (RGB565) from the frame buffer at 0x20000BD0 to the LCD.","param_1: top; param_2: bottom; param_3: left; param_4: right; enforces 320x240 bounds before pushing via LCD_WriteData."
FUN_8000834c,Bluetooth_UART1_Init,Configures USART1 (PA9/PA10 at 115200 baud) and routes it to the external Bluetooth module via GPIOA remap.,Enables pins with FUN_8001272c (0x400 mask), loads 0x1C200 into USART1 (0x40013800), and sets TE/RE bits before enabling the peripheral.
FUN_80013f90,GPS_USART3_Init,Initialises the GPS UART on PC10/PC11 (USART3) for 9600 baud NMEA reception.,Remaps GPIOC pins, programs USART3 registers at 0x40004800 with divisor 0x2580 (9600 baud), enables TX/RX, and powers the port.
FUN_800226b0,UART4_Init,Brings up UART4 on PC10/PC11 at 115200 baud for accessory programming.,Uses FUN_8001272c with the same GPIO masks, writes 0x1C200 to UART4 (0x40004C00), and enables the channel (likely routed through the side connector).
FUN_80008518,Bluetooth_CommandSequencer,Builds and sends command frames to the Bluetooth module, including triggering SPI flash erases and UART transactions.,Drives USART callbacks captured in FUN_8000834c/FUN_800226b0; orchestrates Software_SPI_FlashErase* routines when reprogramming BT firmware.
FUN_8001403c,GPS_SerialReader,Reads NMEA bytes from USART3, buffers them, and feeds the coordinate parser.,Called after GPS_USART3_Init; uses DMA-like burst helper on PC10/PC11 data.
